POD readFormat3(char* d_name)
{
    FILE *fp;
    POD pod;
    if(strstr(d_name,"./racuni")!=0)        // ako je dat pun put do racuna ./racuni/deadpool.txt
        fp=fopen(d_name,"r");
    else                                            // else napravi da bude fullpath
    {
        char fullpath[50]="./racuni/";
        strcat(fullpath,d_name);
        fp=fopen(fullpath,"r");
    }
    char ignore[1024];
    int red=2;
    for(int i=0; i<red; i++)
        fgets(ignore,sizeof(ignore),fp);    // preskace red

    fscanf(fp,"%*s %s %s",pod.name, pod.surname);       // ime i prezime kupca

    if(strcmp(pod.surname,"Datum:")==0)    // ukoliko nema prezime
    {
        strcpy(pod.surname,"");
        fscanf(fp,"%hhu/%hhu/%u",&pod.dan,&pod.mj,&pod.god);
    }
    else
    {
        fscanf(fp,"%*s %hhu/%hhu/%u",&pod.dan,&pod.mj,&pod.god);
    }
    red=6;
    for(int i=0; i<red; i++)
        fgets(ignore,sizeof(ignore),fp);    // preskace red
    int c=10,i=0;
    pod.art=(ARTIKL*)malloc(c*sizeof(ARTIKL));
    ARTIKL art;
    long position;

    while(fscanf(fp,"%s %[^=]======%d======%d======%d",art.name,art.barcode,&art.kol,&art.cijena,&art.total)==5)
    {
        strcpy(pod.art[i].name,art.name);
        strcpy(pod.art[i].barcode,art.barcode);
        pod.art[i].kol=art.kol;
        pod.art[i].cijena=art.cijena;
        pod.art[i].total=art.total;
        i++;
        position=ftell(fp);     // pamti poslednju poziciju nakon fscanf

        if(i==c)
            pod.art=(ARTIKL*)realloc(pod.art,(c *= 2) * sizeof(ARTIKL));
    }

    pod.art=(ARTIKL*)realloc(pod.art,i * sizeof(ARTIKL));
    pod.n=i;
    fseek(fp,position,SEEK_SET);    // pozicioniranje prije poslednjeg fscanf iz while petlje

    fgets(ignore,sizeof(ignore),fp);    // preskace red
    fgets(ignore,sizeof(ignore),fp);    // preskace red

    fscanf(fp,"%*s %d",&pod.total);
    fscanf(fp,"%*s %f",&pod.PDV);
    fscanf(fp,"%*s %*s %*s %f",&pod.sum);

    fclose(fp);
    return pod;
}
